version: 2.1
commands:
  swapref:
    parameters:
      proj:
         type: string
      ref:
         type: string
      pkg:
         type: string
    steps:
      - run:
          name: swap << parameters.ref >> with reference << parameters.pkg >>
          command: |
            dotnet remove << parameters.proj >> reference << parameters.ref >>
            dotnet add << parameters.proj >> package << parameters.pkg >> --source /root/project/packages --prerelease
  pack-proj:
    parameters:
      proj:
         type: string
    steps:
      - run:
          name: Determine version and build package
          command: |
            branch=$CIRCLE_BRANCH
            ver=${branch/"release/"/""}
            suffix=${ver#*-}
            build=${ver%-*}
            echo build- ${build} version- ${suffix}
            if [ $suffix == $build ]
            then
              echo "release"
              dotnet pack << parameters.proj >> --configuration Release -o packages /p:VersionPrefix=${build}
            else
              echo "prerelease" ${suffix}
              dotnet pack << parameters.proj >> --configuration Release -o packages /p:VersionPrefix=${build} --version-suffix ${suffix}
            fi
jobs:
  get-code:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - run: |
         pwd
      - run: |
          mkdir temp
          mkdir packages
          ls -l
      - run: dotnet build tools/build-util/build-util.csproj --output temp
      - run: dotnet temp/build-util.dll src/mathtone-magic.sln
      # - run: dotnet restore src/mathtone-magic.sln
      #- run: dotnet nuget remove source nuget.org
      #- run: dotnet nuget add source /mnt/ramdisk/packages -n local
      #- run: dotnet nuget list source
      #- run: bash temp/process-sln.sh
      #- run: dotnet test src/mathtone-magic.sln
      - run: |
          branch=$CIRCLE_BRANCH
          ver=${branch/"release/"/""}
          suffix=${ver#*-}
          build=${ver%-*}
          echo build- ${build} version- ${suffix}
      - persist_to_workspace:
          root: .
          paths:
            - src
            - tools
            - packages
            - temp/process-sln.sh
  shatter-test-projects:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
      - image: postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: test!1234
      - image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
          MSSQL_SA_PASSWORD: Test!1234
          ACCEPT_EULA: Y
    working_directory: /mnt/ramdisk
    steps:
      - attach_workspace:
          at: .
      - run: |
          dotnet restore src/mathtone-magic.sln
          dotnet nuget remove source nuget.org
          dotnet nuget add source /mnt/ramdisk/packages -n local
          bash temp/process-sln.sh
      - run: dotnet test src/mathtone-magic.sln --configuration Release
  pack-core:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - attach_workspace:
          at: .
      - checkout
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Common/Mathtone.Sdk.Common.csproj
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Logging/Mathtone.Sdk.Logging.csproj
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Utilities/Mathtone.Sdk.Utilities.csproj
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Data/Mathtone.Sdk.Data.csproj
      - persist_to_workspace:
          root: .
          paths:
            - src
            - packages

  publish-artifactory:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Add Artifactory"
          command: dotnet nuget add source https://mathtone.jfrog.io/artifactory/api/nuget/v3/mathtone-dev --name Mathtone-Dev --username ${ARTIFACTORY_USER} --password ${ARTIFACTORY_PWD} --store-password-in-clear-text
      - run:
         name: Publish to Atifactory
         command: |
            dotnet nuget push root/ramdisk/packages/*.nupkg --source Mathtone-Dev

  publish-nuget:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run:
         name: Publish to Nuget
         command: dotnet nuget push packages/*.nupkg --api-key ${NUGET_PUBLISH_KEY} --source https://api.nuget.org/v3/index.json
workflows:
  build-release:
    jobs:
      - get-code
      - shatter-test-projects:
          context: MATHTONE_DEV
          requires:
            - get-code 
      - publish-artifactory:
          context: MATHTONE_DEV
          requires:
            - shatter-test-projects
      #- pack-core:
      #    requires:
      #      - get-code
      #- pack-sdk-testing:
      #    requires:
      #      - pack-core
      #- pack-sdk-data-sql:
      #    requires:
      #      - pack-core
      #- pack-sdk-data-npgsql:
      #    requires:
      #      - pack-core
      #- test-core:
      #    context: MATHTONE_DEV
      #    requires:
      #      - pack-core
      #      - pack-sdk-testing
      #      - pack-sdk-data-sql
      #      - pack-sdk-data-npgsql
            



