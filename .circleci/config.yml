version: 2.1
commands:
  swapref:
    parameters:
      proj:
         type: string
      ref:
         type: string
      pkg:
         type: string
    steps:
      - run:
          name: swap << parameters.ref >> with reference << parameters.pkg >> 
          command: |
            dotnet remove << parameters.proj >> reference << parameters.ref >>
            dotnet add << parameters.proj >> package << parameters.pkg >> --source ./packages --prerelease
      
  pack-proj:
    parameters:
      proj:
         type: string
    steps:
      - run:
          name: Determine version and build package
          command: |
            branch=$CIRCLE_BRANCH
            ver=${branch/"release/"/""}
            suffix=${ver#*-}
            build=${ver%-*}
            echo build- ${build} version- ${suffix}
            if [ $suffix == $build ]
            then
              echo "release"
              dotnet pack << parameters.proj >> --configuration Release -o packages /p:VersionPrefix=${build}
            else
              echo "prerelease" ${suffix}
              dotnet pack << parameters.proj >> --configuration Release -o packages /p:VersionPrefix=${build} --version-suffix ${suffix}
            fi
            
jobs:

  prep-project:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - run: |
          branch=$CIRCLE_BRANCH
          ver=${branch/"release/"/""}
          suffix=${ver#*-}
          build=${ver%-*}
          echo build- ${build} version- ${suffix}
  run-unit-tests:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
      - image: postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${PGSQL_TEST_PWD}
      - image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
          MSSQL_SA_PASSWORD: ${SQL_TEST_PWD}
          ACCEPT_EULA: Y
    steps:
      - checkout
      - run: dotnet test src/mathtone-magic.sln
  repack-projects:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
      - image: postgres
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: ${PGSQL_TEST_PWD}
      - image: mcr.microsoft.com/mssql/server:2022-latest
        environment:
          MSSQL_SA_PASSWORD: ${SQL_TEST_PWD}
          ACCEPT_EULA: Y
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - run: dotnet restore src/mathtone-magic.sln
      - pack-proj:
          proj: src/SDK/Mathtone.Sdk.Data/Mathtone.Sdk.Data.csproj
      - pack-proj:
          proj: src/SDK/Mathtone.Sdk/Mathtone.Sdk.csproj
      - run: 
          name: Add Nuget
          command: dotnet nuget add source ~/packages --name Local
      # swap Mathtone.Sdk.Data.Sql
      - swapref:
          proj: src/SDK/Mathtone.Sdk.Data.Sql/Mathtone.Sdk.Data.Sql.csproj
          ref: ../Mathtone.Sdk.Data/Mathtone.Sdk.Data.csproj
          pkg: Mathtone.Sdk.Data
      - swapref:
          proj: src/SDK/Mathtone.Sdk.Data.Npgsql/Mathtone.Sdk.Data.Npgsql.csproj
          ref: ../Mathtone.Sdk.Data/Mathtone.Sdk.Data.csproj
          pkg: Mathtone.Sdk.Data

      #swap test projects
      - swapref:
          proj: src/tests/Mathtone.Sdk.Data.Sql.Tests/Mathtone.Sdk.Data.Sql.Tests.csproj
          ref: ../Mathtone.Sdk.Data.Sql/Mathtone.Sdk.Data.Sql.csproj
          pkg: Mathtone.Sdk.Data.Sql
      - swapref:
          proj: src/tests/Mathtone.Sdk.Data.Npgsql.Tests/Mathtone.Sdk.Data.Npgsql.Tests.csproj
          ref: ../Mathtone.Sdk.Data.Npgsql/Mathtone.Sdk.Data.Npgsql.csproj
          pkg: Mathtone.Sdk.Data.Npgsql

      - swapref:
          proj: src/tests/Mathtone.Sdk.Tests/Mathtone.Sdk.Tests.csproj
          ref: ../Mathtone.Sdk/Mathtone.Sdk.csproj
          pkg: Mathtone.Sdk
      - run: dotnet restore src/mathtone-magic.sln
      # - 
      - run:
          name: Build & Test Solution (Release)
          command: dotnet test src/mathtone-magic.sln --configuration Release #--results-directory test-results --logger "trx;logfilename=mytests.trx"
      
      - persist_to_workspace:
          root: .
          paths:
            - packages
  publish-artifactory:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Add Artifactory"
          command: dotnet nuget add source https://mathtone.jfrog.io/artifactory/api/nuget/v3/mathtone-dev --name Mathtone-Dev --username ${ARTIFACTORY_USER} --password ${ARTIFACTORY_PWD} --store-password-in-clear-text
      - run:
         name: Publish to Atifactory
         command: dotnet nuget push packages/*.nupkg --source Mathtone-Dev
        
  publish-nuget:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run:
         name: Publish to Nuget
         command: dotnet nuget push packages/*.nupkg --api-key ${NUGET_PUBLISH_KEY} --source https://api.nuget.org/v3/index.json
workflows:
  build-release:
    jobs:
      - prep-project
      - run-unit-tests:
          filters:
            branches:
               ignore:
                  - /release.*/
          context: MATHTONE_DEV
          name: Run Unit Tests
          requires:
            - prep-project
      - repack-projects:
          filters:
            branches:
               only:
                  - /release.*/
          context: MATHTONE_DEV
          name: Repack Project Refs
          requires:
            - prep-project
      - publish-artifactory:
          filters:
            branches:
               only:
                  - /release.*/
          context: MATHTONE_DEV
          requires:
            - Repack Project Refs
      - approve-release:
          filters:
            branches:
               only:
                  - /release.*/
          type: approval
          name: Approve Release
          requires:
            - Repack Project Refs
      - publish-nuget:
          filters:
            branches:
               only:
                  - /release.*/
          context: MATHTONE_DEV
          requires:
            - Approve Release
