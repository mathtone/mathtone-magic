version: 2.1
commands:
  swapref:
    parameters:
      proj:
         type: string
      ref:
         type: string
      pkg:
         type: string
    steps:
      - run:
          name: swap << parameters.ref >> with reference << parameters.pkg >> 
          command: |
            dotnet remove << parameters.proj >> reference << parameters.ref >>
            dotnet add << parameters.proj >> package << parameters.pkg >> --source ./packages --prerelease
  pack-proj:
    parameters:
      proj:
         type: string
    steps:
      - run:
          name: Determine version and build package
          command: |
            branch=$CIRCLE_BRANCH
            ver=${branch/"release/"/""}
            suffix=${ver#*-}
            build=${ver%-*}
            echo build- ${build} version- ${suffix}
            if [ $suffix == $build ]
            then
              echo "release"
              dotnet pack << parameters.proj >> --configuration Release -o packages /p:VersionPrefix=${build}
            else
              echo "prerelease" ${suffix}
              dotnet pack << parameters.proj >> --configuration Release -o packages /p:VersionPrefix=${build} --version-suffix ${suffix}
            fi
            
jobs:
  get-code:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - checkout
      - run: |
          branch=$CIRCLE_BRANCH
          ver=${branch/"release/"/""}
          suffix=${ver#*-}
          build=${ver%-*}
          echo build- ${build} version- ${suffix}
  pack-core:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - attach_workspace:
          at: .
      - checkout
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Common/Mathtone.Sdk.Common.csproj
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Logging/Mathtone.Sdk.Logging.csproj
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Utilities/Mathtone.Sdk.Utilities.csproj
      - pack-proj:
          proj: src/sdk/Mathtone.Sdk.Data/Mathtone.Sdk.Data.csproj
      - persist_to_workspace:
          root: .
          paths:
            - src
            - packages
            
  # pack-testing-xunit:
  #   docker:
  #     - image: mcr.microsoft.com/dotnet/sdk:6.0
  #   working_directory: /mnt/ramdisk
  #   steps:
  #     - attach_workspace:
  #         at: .
  #     # - checkout  
  pack-sdk-data:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - attach_workspace:
          at: .
      - run: 
          name: Add Nuget
          command: |
            dotnet new nugetconfig
            dotnet nuget add source ~/packages --name Local
            dotnet restore src/sdk/Mathtone.Sdk.Testing.Xunit/Mathtone.Sdk.Testing.Xunit.csproj
      - swapref:
          proj: src/sdk/Mathtone.Sdk.Testing.Xunit/Mathtone.Sdk.Testing.Xunit.csproj
          ref: ../Mathtone.Sdk.Utilities/Mathtone.Sdk.Utilities.csproj
          pkg: Mathtone.Sdk.Utilities
      # - run: ls -l 
      # - run: 
      #     name: Restore
      #     command: |
      #       dotnet new nugetconfig
      #       dotnet restore src/mathtone-magic.sln --verbosity normal
      # - swapref:
      #     proj: src/sdk/Mathtone.Sdk.Testing.Xunit/Mathtone.Sdk.Testing.Xunit.csproj
      #     ref: ../Mathtone.Sdk.Common/Mathtone.Sdk.Common.csproj
      #     pkg: Mathtone.Sdk.Common

      # - swapref:
      #     proj: src/sdk/Mathtone.Sdk.Testing.Xunit/Mathtone.Sdk.Testing.Xunit.csproj
      #     ref: ../Mathtone.Sdk.Logging/Mathtone.Sdk.Logging.csproj
      #     pkg: Mathtone.Sdk.Logging
      
      # - swapref:
      #     proj: src/sdk/Mathtone.Sdk.Testing.Xunit/Mathtone.Sdk.Testing.Xunit.csproj
      #     ref: ../Mathtone.Sdk.Utilities/Mathtone.Sdk.Utilities.csproj
      #     pkg: Mathtone.Sdk.Utilities
      # - checkout

  pack-sdk-data-sql:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - attach_workspace:
          at: .

  pack-sdk-data-npgsql:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    working_directory: /mnt/ramdisk
    steps:
      - attach_workspace:
          at: .

  publish-artifactory:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run:
          name: "Add Artifactory"
          command: dotnet nuget add source https://mathtone.jfrog.io/artifactory/api/nuget/v3/mathtone-dev --name Mathtone-Dev --username ${ARTIFACTORY_USER} --password ${ARTIFACTORY_PWD} --store-password-in-clear-text
      #- run:
      #   name: Publish to Atifactory
      #   command: dotnet nuget push packages/*.nupkg --source Mathtone-Dev

  publish-nuget:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    steps:
      - attach_workspace:
          at: .
      - run:
         name: Publish to Nuget
         command: dotnet nuget push packages/*.nupkg --api-key ${NUGET_PUBLISH_KEY} --source https://api.nuget.org/v3/index.json
workflows:
  build-release:
    jobs:
      - get-code
      - pack-core:
          requires:
            - get-code
      - pack-sdk-data:
          requires:
            - pack-core
      # - pack-testing-xunit:
      #     requires:
      #       - pack-core
      # - pack-sdk-data-sql:
      #     requires:
      #       - pack-sdk-data
      # - pack-sdk-data-npgsql:
      #     requires:
      #       - pack-sdk-data
          
      
      
